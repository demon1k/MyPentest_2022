# ~/.profile: executed by the command interpreter for login shells.
# This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login
# exists.
# see /usr/share/doc/bash/examples/startup-files for examples.
# the files are located in the bash-doc package.

# the default umask is set in /etc/profile; for setting the umask
# for ssh logins, install and configure the libpam-umask package.
#umask 022

# if running bash
if [ -n "$BASH_VERSION" ]; then
    # include .bashrc if it exists
    if [ -f "$HOME/.bashrc" ]; then
	. "$HOME/.bashrc"
    fi
fi

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/bin" ] ; then
    PATH="$HOME/bin:$PATH"
fi

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/.local/bin" ] ; then
    PATH="$HOME/.local/bin:$PATH"
fi

export PATH=$PATH:/usr/local/go/bin



s3ls(){
aws s3 ls s3://$1
}

s3cp(){
aws s3 cp $2 s3://$1
}

crtndstry(){
Tools/crtndstry/crtndstry $1
}

certprobe(){
curl -s https://crt.sh/\?q\=\%.$1\&output\=json | jq -r '.[].name_value' | sed 's/\*\.//g' | sort -u | httprobe | tee -a ./all.txt
}

masscan(){
sudo masscan -p4443,2075,2076,6443,3868,3366,8443,8080,9443,9091,3000,8000,5900,8081,6000,10000,8181,3306,5000,4000,8888,5432,15672,9999,161,4044,7077,4040,9000,8089,443,744$}
}

certspotter(){
curl -s https://certspotter.com/api/v0/certs\?domain\=$1 | jq '.[].dns_names[]' | sed 's/\"//g' | sed 's/\*\.//g' | sort -u | grep $1
}

crtsh(){
curl -s https://crt.sh/?Identity=%.$1 | grep ">*.$1" | sed 's/<[/]*[TB][DR]>/\n/g' | grep -vE "<|^[\*]*[\.]*$1" | sort -u | awk 'NF'
}

certnmap(){
curl https://certspotter.com/api/v0/certs\?domain\=$1 | jq '.[].dns_names[]' | sed 's/\"//g' | sed 's/\*\.//g' | sort -u | grep $1  | nmap -T5 -Pn -sS -i - -$
}

ipinfo(){
curl http://ipinfo.io/$1
}

Lazyrecon(){
sudo sh "Tools/LazyRecon/LazyRecon.sh" $1
}

aemscan(){
"Tools/aemscan-master/aemscan" $1
}

sublist3rs()
{
sudo python3 "Tools/Sublist3r/sublist3r.py" -d $1 --output sub_sublist3r_$1
}

gitsubs(){
github-subdomains -d $1 -t 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 -o sub_github_$1
}

takeover(){
sudo python3 "Tools/subdomain-takeover/takeover.py" -d $1 -w "Tools/subdomain-takeover/subdomains.txt" -t 20
}

amazon-s3-enum(){
sudo python3 "Tools/s3brute/amazon-s3-enum.py" -d $1 -w "Tools/takeover/BucketNames.txt"
}

lazys3(){ ##open lazys3.rb and set wordlist = "Tools/lazys3/common_bucket_prefixes.txt"
sudo ruby "Tools/lazys3/lazys3.rb" $1
}


paramspiders(){
sudo python3 "Tools/ParamSpider/paramspider.py" -d $1 --exclude jpg,css,png,js,jpeg,pdf,gif ; kxss 
}

Bypass403(){
sudo python3 "Tools/403bypasser/403bypasser.py" -U $1 -d $2
}

dirsearchs(){
sudo python3 "Tools/dirsearch/dirsearch.py" -u $1 -w $2 -e conf,config,bak,backup,swp,old,db,sql,asp,aspx,aspx~,asp~,py,py~,rb,rb~,php,php~,bak,bkp,cache,cgi,conf,csv,html,inc,jar,js,json,jsp,jsp~,lock,log,rar,old,sql,sql.gz,sql.zip,sql.tar.gz,sql~,swp,swp~,tar,tar.bz2,tar.gz,txt,wadl,zip,log,xml,js,json -t 100 -i $3 
}

sqlmap_txt(){
sudo python3 "Tools/sqlmap-dev/sqlmap.py" -r $1 -p $2 --force-ssl --level 5  --risk 3 --dbs --hostname --current-user
}

sqlmap_single(){
sudo python3 "Tools/sqlmap-dev/sqlmap.py" -u $1 -p $2 --force-ssl --level 5  --risk 3 --dbs --hostname --current-user
}


ncx(){
nc -l -n -vv -p $1 -k
}

crtshdirsearch(){ #gets all domains from crtsh, runs httprobe and then dir bruteforcers
curl -s https://crt.sh/?q\=%.$1\&output\=json | jq -r '.[].name_value' | sed 's/\*\.//g' | sort -u | httprobe -c 50 | grep https | xargs -n1 -I{} python3 Tools/dirsearch/dirsearch.py -u {} -e $2 -t 50 -b 
}
